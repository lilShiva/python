"""
# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
#    Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def first_func ():

    a_1 = int(input("Введите число 1: "))
    b_1 = int(input("Введите число 2: "))
    c_1 = 0

    try:
        c_1 = a_1 / b_1
    except ZeroDivisionError:
        print('На ноль делить нельзя')

    return c_1

print(first_func())
"""
"""
# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия,
#    год рождения, город проживания, email, телефон.
#    Функция должна принимать параметры как именованные аргументы.
#    Реализовать вывод данных о пользователе одной строкой.

def second_func ():

    data = []
    data.append(input("Введите имя: "))
    data.append(input("Введите фамилия: "))
    data.append(input("Введите год рождения: "))
    data.append(input("Введите название города: "))
    data.append(input("Введите e-mail: "))
    data.append(input("Введите номер телефона: "))
    return data

print(second_func())
"""
"""
#  3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
#     и возвращает сумму наибольших двух аргументов.

def third_func ():

    calc = []

    calc.append(int(input("Введите значение 1: ")))
    calc.append(int(input("Введите значение 2: ")))
    calc.append(int(input("Введите значение 3: ")))

    minimum = min(calc)
    calc.remove(minimum)
    summa = sum(calc)

    return summa

print(third_func())
"""
"""
# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
#    Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде
#    функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#  Решение № 1
def my_func():
    x = int(input('Введите действительное положительное число:  '))
    y = int(input('Введите целое отрицательное число:  '))
    z = abs(y)
    i = 0
    a = 1

    while i < z:
        a = (a * x)
        i += 1

    return a

print(my_func())
"""

"""
#  Решение № 2
def my_func(x, y):

    z = abs(y)
    i = 0
    a = 1

    while i < z:
        a = (a * x)
        i += 1

    return a

print(my_func(2, -4))

"""
# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
#    При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
#    разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться
#    к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
#    Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
#    к полученной ранее сумме и после этого завершить программу.
"""
def summa():
    sum = 0

    while True:
        vvod1 = input('Введите числа:  ').split()

        for i in vvod1:
            if i == '*':
                return sum
            else:
                try:
                    sum += int(i)
                except ValueError:
                    print('Если хотите закончить введите - *.\n')

        print(f'Подсчет закончен. Сумма элементов = {sum}.\n')

print(summa())
"""
"""
# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
#    но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def word_func():
    for word in input('Введите слово: \n').split():
        chars = 0
        for char in word:
            if 97 <= ord(char) <= 122:
                chars += 1
        print(word.title() if chars == len(word) else f"{word} - Введите только маленькие английские буквы")

word_func()
"""