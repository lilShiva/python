"""
# 1) Реализовать скрипт проверки типа данных каждого элемента.
allType = [1, 'word', [2, 'tree'], ('a', 'b'), 66.25]

for i in allType:
    print(f"Переменная {i} имеет тип - {type(i)}")
"""
"""
# 2) Для списка реализовать обмен значений соседних элементов, т.е.
#    значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
#    При нечетном количестве элементов последний сохранить на своем месте.
#    Для заполнения списка элементов необходимо использовать функцию input().

masterList = []
nunList = int(input("Сколько элементов ?: "))
n = 0

while n < nunList:
    masterList.append(input("Введите число: "))
    print(masterList)
    n += 1
print('конец 1 части')

el = 0
for e in range(int(len(masterList)/2)):
        masterList[el], masterList[el + 1] = masterList[el + 1], masterList[el]
        el += 2
print(masterList)
"""
"""
# 3) Пользователь вводит месяц в виде целого числа от 1 до 12.
#    Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
#    Напишите решения через list и через dict.

month_dict = {
            1: 'Январь',
            2: 'Февраль',
            3: 'Март',
            4: 'Апрель',
            5: 'Май',
            6: 'Июнь',
            7: 'Июль',
            8: 'Август',
            9: 'Сентябрь',
            10: 'Октябрь',
            11: 'Ноябрь',
            12: 'Декабрь'}

season_dict = {'Зима': (1, 2, 12),
               'Весна': (3, 4, 5),
               'Лето': (6, 7, 8),
               'Осень': (9, 10, 11)}

numMonth = int(input("Ввдите номер месяца: "))

if numMonth <= 12 and numMonth >= 1:

    for month_key in month_dict.keys():
        if month_key == numMonth:

            for season_key in season_dict.keys():
                if numMonth in season_dict[season_key]:
                    print(f"Месяц - {month_dict.setdefault(month_key)}, Сезон - {season_key}")
                    break

else:
    print('В году всего 12 месяцев, вы должны это знать!)')
"""
"""
# 4) Пользователь вводит строку из нескольких слов, разделённых пробелами.
#    Вывести каждое слово с новой строки.
#    Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

main_list = input("Введите слова: ").split()

for ind, el in enumerate(main_list, 1):
    print(ind, el[:10])
"""
# 5) Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
#    У пользователя необходимо запрашивать новый элемент рейтинга.
#    Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
#    с тем же значением должен разместиться после них.
#    (Решение списал у вас. Сам не догадался)

my_list = [9, 8, 7, 7, 7, 6, 6, 5, 4, 3, 2, 1]

new_number = int(input("Ввдите элемент рейтинга: "))
i = 0

for n in my_list:
    if new_number <= n:
        i += 1
my_list.insert(i, new_number)
print(my_list)






















